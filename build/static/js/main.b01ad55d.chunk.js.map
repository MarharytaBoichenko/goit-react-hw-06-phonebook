{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","App.module.css","redux/actions.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Container/Container.js","App.js","redux/contacts-reducer.js","redux/filter-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css"],"names":["module","exports","addContacts","createAction","name","number","payload","id","uuidv4","deleteContacts","changeFilter","ContactForm","useState","setName","setNumber","contacts","useSelector","state","dispatch","useDispatch","reset","onSubmit","e","preventDefault","nameInContact","toLowerCase","trim","find","cont","alert","className","s","form","inputLabel","label","onChange","target","value","type","nameInput","required","pattern","title","button","ContactItem","contactItem","contactName","contactNumber","onClick","deleteContact","ContactList","console","log","filter","visibleContacts","normalizedFilter","contact","toString","includes","getVisibleContact","list","map","item","Filter","filterInput","Heading","text","Container","children","container","App","contactReducer","createReducer","action","filterReducer","contactsPersistConfig","key","storage","blacklist","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b01ad55d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"inputLabel\":\"Filter_inputLabel__KDsXr\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addContacts = createAction(\"contacts/add\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nexport const visibleContacts = createAction(\"contacts/getVisible\");\nexport const deleteContacts = createAction(\"contacts/delete\");\n\nexport const changeFilter = createAction(\"filter/change\");\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContacts } from \"../../redux/actions\";\n\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector((state) => {\n    return state.contacts;\n  });\n  const dispatch = useDispatch();\n\n  const nameHandler = (e) => {\n    setName(e.target.value);\n  };\n  const numberHandler = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const nameInContact = name.toLowerCase().trim();\n    const isInContact = contacts.find(\n      (cont) => cont.name.toLowerCase().trim() === nameInContact\n    );\n    if (isInContact) {\n      alert(`${name} is already in contact`);\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit} className={s.form}>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Name</span>\n        <input\n          onChange={nameHandler}\n          type=\"name\"\n          // name=\"name\"\n          value={name}\n          className={s.nameInput}\n          required\n        ></input>\n      </label>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Number</span>\n        <input\n          type=\"tel\"\n          // name=\"number\"\n          value={number}\n          onChange={numberHandler}\n          className={s.nameInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { ContactForm };\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"../../redux/actions\";\nimport s from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const deleteContact = (id) => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactName}> {`${name}:`}</p>{\" \"}\n      <p className={s.contactNumber}> {number}</p>\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport { ContactItem };\n","import PropTypes from \"prop-types\";\nimport { ContactItem } from \"../ContactItem/ContactItem\";\nimport s from \"./ContactList.module.css\";\nimport { useSelector } from \"react-redux\";\n\nconst ContactList = () => {\n  const contacts = useSelector((state) => {\n    console.log(state.contacts);\n    return state.contacts;\n  });\n\n  const filter = useSelector((state) => {\n    console.log(state.filter);\n    return state.filter;\n  });\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    console.log(contacts);\n    if (!contacts) {\n      return;\n    }\n    return contacts.filter((contact) =>\n      contact.name.toString().toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContact();\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.item}>\n            <ContactItem name={name} number={number} id={id} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\nexport { ContactList };\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/actions\";\nimport s from \"./Filter.module.css\";\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterHandler = (e) => {\n    console.log(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <label className={s.inputLabel}>\n        <span className={s.label}>Find contacts by name</span>\n        <input\n          onChange={filterHandler}\n          type=\"text\"\n          name=\"filter\"\n          // value={value}\n          className={s.filterInput}\n        ></input>\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { Filter };\n","export const Heading = ({ text }) => {\n  return <h2>{text}</h2>;\n};\n","import s from \"./Container.module.css\";\nexport const Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n","import \"./App.module.css\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { Heading } from \"./components/Heading/Heading\";\nimport { Container } from \"./components/Container/Container\";\n// import Counter from \"./Counter/counter\";\n\nexport default function App() {\n  return (\n    <>\n      <Container>\n        {/* // <Counter /> */}\n        <Heading text=\"Phonebook\" />\n        <ContactForm />\n        <Heading text=\"Contacts\" />\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { addContacts, deleteContacts } from \"./actions\";\n\nconsole.log(addContacts.type);\n\nexport const contactReducer = createReducer([], {\n  [addContacts]: (state, action) => {\n    console.log(state);\n    console.log(action);\n    console.log(action.payload);\n    return [...state, action.payload];\n  },\n\n  [deleteContacts]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./actions\";\n\nexport const filterReducer = createReducer(\"\", {\n  [changeFilter]: (state, action) => {\n    // console.log(state);\n    console.log(action);\n    console.log(action.payload);\n    return action.payload;\n  },\n});\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactReducer } from \"./contacts-reducer\";\nimport { filterReducer } from \"./filter-reducer\";\n\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\n///это то что будем  сохранять\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n  //за  исключением  фильтра\n};\n\n//корневой reducer\nconst rootReducer = combineReducers({\n  // contacts: persistReducer(contactsPersistConfig, contactReducer),\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n\n//gthcbcnbv контакт ред  і его комбайнім в корневой -- НЕ работает так!\n// const persistContRed = persistReducer(contactsPersistConfig, contactReducer);\n// const rootReducer = combineReducers({\n//   contacts: persistContRed,\n//   filter: filterReducer,\n// });\n\nconst persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"inputLabel\":\"ContactForm_inputLabel__3ilUb\",\"label\":\"ContactForm_label__378f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__5eHQm\",\"contactName\":\"ContactItem_contactName__3Zp2H\",\"contactNumber\":\"ContactItem_contactNumber__Lf19i\"};"],"sourceRoot":""}