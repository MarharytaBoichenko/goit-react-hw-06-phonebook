{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","redux/actions.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/filter-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","reset","e","preventDefault","className","s","form","inputLabel","label","onChange","target","value","type","nameInput","required","pattern","title","button","addContacts","createAction","payload","id","uuidv4","deleteContacts","changeFilter","ContactItem","dispatch","useDispatch","contactItem","contactName","contactNumber","onClick","deleteContact","ContactList","contacts","useSelector","state","console","log","list","map","item","Filter","filterInput","App","filter","container","nameInContact","toLowerCase","trim","find","cont","alert","actions","normalizedFilter","contact","toString","includes","getVisibleContact","contactReducer","createReducer","action","filterReducer","_","contactsPersistConfig","key","storage","blacklist","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6a2e83a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"inputLabel\":\"Filter_inputLabel__KDsXr\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"container\":\"App_container__1MQN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameHandler = (e) => {\n    setName(e.target.value);\n  };\n  const numberHandler = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit} className={s.form}>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Name</span>\n        <input\n          onChange={nameHandler}\n          type=\"name\"\n          // name=\"name\"\n          value={name}\n          className={s.nameInput}\n          required\n        ></input>\n      </label>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Number</span>\n        <input\n          type=\"tel\"\n          // name=\"number\"\n          onChange={numberHandler}\n          value={number}\n          className={s.nameInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { ContactForm };\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addContacts = createAction(\"contacts/add\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nexport const visibleContacts = createAction(\"contacts/getVisible\");\nexport const deleteContacts = createAction(\"contacts/delete\");\n\nexport const changeFilter = createAction(\"filter/change\");\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"../../redux/actions\";\nimport s from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const deleteContact = (id) => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactName}> {`${name}:`}</p>{\" \"}\n      <p className={s.contactNumber}> {number}</p>\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport { ContactItem };\n","import PropTypes from \"prop-types\";\nimport { ContactItem } from \"../ContactItem/ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = () => {\n  const contacts = useSelector((state) => {\n    console.log(state.contacts);\n    return state.contacts;\n  });\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.item}>\n            <ContactItem name={name} number={number} id={id} />\n            {/* <button\n              type=\"button\"\n              className={s.button}\n              onClick={() => {\n                onDeleteContact(id);\n              }}\n            >\n              Delete\n            </button> */}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\nexport { ContactList };\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nconst Filter = ({ value, onChange }) => (\n  <>\n    <label className={s.inputLabel}>\n      <span className={s.label}>Find contacts by name</span>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        className={s.filterInput}\n      ></input>\n    </label>\n  </>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { Filter };\n","import { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.module.css\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport s from \"./App.module.css\";\nimport * as actions from \"./redux/actions\";\n// import Counter from \"./Counter/counter\";\n\nexport default function App() {\n  const contacts = useSelector((state) => {\n    return state.contacts;\n  });\n\n  const filter = useSelector((state) => {\n    return state.filter;\n  });\n\n  const dispatch = useDispatch();\n\n  const filterHandler = (e) => {\n    dispatch(actions.changeFilter(e.target.value));\n  };\n\n  const addContactFromForm = ({ name, number }) => {\n    const nameInContact = name.toLowerCase().trim();\n    const isInContact = contacts.find(\n      (cont) => cont.name.toLowerCase().trim() === nameInContact\n    );\n    if (isInContact) {\n      alert(`${name} is already in contact`);\n      return;\n    }\n    dispatch(actions.addContacts({ name, number }));\n  };\n  // удаление  перенесено в ContactItem,  чтоб не прокидывать проп  deleteContact  ,  так норм?\n  // const deleteContact = (id) => {\n  //   console.log(id);\n  //   dispatch(actions.deleteContacts(id));\n  // };\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    console.log(contacts);\n    if (!contacts) {\n      return;\n    }\n    return contacts.filter((contact) =>\n      contact.name.toString().toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    // <Counter />\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContactFromForm} />\n      <h2>Contacts</h2>\n      <Filter onChange={filterHandler} />\n      {contacts && (\n        <ContactList\n          contacts={getVisibleContact()}\n          //не  надо  пропс\n          // onDeleteContact={deleteContact}\n        />\n      )}\n    </div>\n  );\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { addContacts, deleteContacts } from \"./actions\";\n\nconsole.log(addContacts.type);\n\nexport const contactReducer = createReducer([], {\n  [addContacts]: (state, action) => {\n    console.log(state);\n    console.log(action);\n    console.log(action.payload);\n    return [...state, action.payload];\n  },\n\n  [deleteContacts]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./actions\";\n\nexport const filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, action) => {\n    // console.log(state);\n    // console.log(action);\n    // console.log(action.payload);\n    return action.payload;\n  },\n});\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactReducer } from \"./contacts-reducer\";\nimport { filterReducer } from \"./filter-reducer\";\n\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\n///это то что будем  сохранять\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n  //за  исключением  фильтра\n};\n\n//корневой reducer\nconst rootReducer = combineReducers({\n  // contacts: persistReducer(contactsPersistConfig, contactReducer),\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n\n//gthcbcnbv контакт ред  і его комбайнім в корневой -- НЕ работает так!\n// const persistContRed = persistReducer(contactsPersistConfig, contactReducer);\n// const rootReducer = combineReducers({\n//   contacts: persistContRed,\n//   filter: filterReducer,\n// });\n\nconst persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"inputLabel\":\"ContactForm_inputLabel__3ilUb\",\"label\":\"ContactForm_label__378f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__5eHQm\",\"contactName\":\"ContactItem_contactName__3Zp2H\",\"contactNumber\":\"ContactItem_contactNumber__Lf19i\"};"],"sourceRoot":""}